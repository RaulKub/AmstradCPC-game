ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 1.
Hexadecimal [16-Bits]



                              1 ;;This file is part of Kubso.
                              2 ;;
                              3 ;;Kubso is free software: you can redistribute it and/or modify
                              4 ;;it under the terms of the GNU General Public License as published by
                              5 ;;the Free Software Foundation, either version 3 of the License, or
                              6 ;;(at your option) any later version.
                              7 ;;
                              8 ;;Kubso is distributed in the hope that it will be useful,
                              9 ;;but WITHOUT ANY WARRANTY; without even the implied warranty of
                             10 ;;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                             11 ;;GNU General Public License for more details.
                             12 ;;
                             13 ;;You should have received a copy of the GNU General Public License
                             14 ;;along with Kubso.  If not, see <https://www.gnu.org/licenses/>.
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 2.
Hexadecimal [16-Bits]



                             15 .include "cpcfunciones.h.s"
                              1 ;;This file is part of Kubso.
                              2 ;;
                              3 ;;Kubso is free software: you can redistribute it and/or modify
                              4 ;;it under the terms of the GNU General Public License as published by
                              5 ;;the Free Software Foundation, either version 3 of the License, or
                              6 ;;(at your option) any later version.
                              7 ;;
                              8 ;;Kubso is distributed in the hope that it will be useful,
                              9 ;;but WITHOUT ANY WARRANTY; without even the implied warranty of
                             10 ;;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                             11 ;;GNU General Public License for more details.
                             12 ;;
                             13 ;;You should have received a copy of the GNU General Public License
                             14 ;;along with Kubso.  If not, see <https://www.gnu.org/licenses/>.
                             15 .globl cpct_disableFirmware_asm
                             16 .globl cpct_getScreenPtr_asm
                             17 .globl cpct_setDrawCharM1_asm
                             18 .globl cpct_drawStringM1_asm
                             19 .globl cpct_waitVSYNC_asm
                             20 .globl cpct_isAnyKeyPressed_f_asm
                             21 .globl cpct_scanKeyboard_f_asm
                             22 .globl cpct_drawSolidBox_asm
                             23 .globl cpct_isKeyPressed_asm
                             24 .globl cpct_waitVSYNC_asm
                             25 .globl cpct_setVideoMode_asm
                             26 .globl cpct_setPalette_asm
                             27 .globl cpct_getHWColour_asm
                             28 .globl cpct_drawSprite_asm
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 3.
Hexadecimal [16-Bits]



                             16 .include "manager/entity_manager.h.s"
                              1 ;;This file is part of Kubso.
                              2 ;;
                              3 ;;Kubso is free software: you can redistribute it and/or modify
                              4 ;;it under the terms of the GNU General Public License as published by
                              5 ;;the Free Software Foundation, either version 3 of the License, or
                              6 ;;(at your option) any later version.
                              7 ;;
                              8 ;;Kubso is distributed in the hope that it will be useful,
                              9 ;;but WITHOUT ANY WARRANTY; without even the implied warranty of
                             10 ;;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                             11 ;;GNU General Public License for more details.
                             12 ;;
                             13 ;;You should have received a copy of the GNU General Public License
                             14 ;;along with Kubso.  If not, see <https://www.gnu.org/licenses/>.
                             15 .globl entityman_init
                             16 .globl entityman_create
                             17 .globl _num_entities
                             18 .globl _entity_array
                             19 .globl entity_size
                             20 .globl entityman_getNumEntities_A
                             21 .globl entityman_getEntityArray_IX
                             22 .globl reset
                             23 
                             24 .macro  DefineEntity _name, _x, _y, _w, _h, _vx, _vy, _color
                             25 _name::
                             26    .db  _x
                             27    .db  _y
                             28    .db  _w
                             29    .db  _h
                             30    .db  _vx
                             31    .db  _vy
                             32    .db  _color
                             33 .endm
                             34 
                     0000    35 entity_x = 0
                     0001    36 entity_y = 1
                     0002    37 entity_w = 2
                     0003    38 entity_h = 3
                     0004    39 entity_estado = 4
                     0005    40 entity_vy = 5
                     0006    41 entity_color = 6
                     0007    42 sizeof_entity = 7
                             43 
                             44 
                             45 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 4.
Hexadecimal [16-Bits]



                             17 .include "mainJuego.h.s"
                              1 ;;This file is part of Kubso.
                              2 ;;
                              3 ;;Kubso is free software: you can redistribute it and/or modify
                              4 ;;it under the terms of the GNU General Public License as published by
                              5 ;;the Free Software Foundation, either version 3 of the License, or
                              6 ;;(at your option) any later version.
                              7 ;;
                              8 ;;Kubso is distributed in the hope that it will be useful,
                              9 ;;but WITHOUT ANY WARRANTY; without even the implied warranty of
                             10 ;;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                             11 ;;GNU General Public License for more details.
                             12 ;;
                             13 ;;You should have received a copy of the GNU General Public License
                             14 ;;along with Kubso.  If not, see <https://www.gnu.org/licenses/>.
                             15 .globl GameStart
                             16 .globl colision
                             17 .globl Mina
                             18 .globl Inicio
                             19 .globl letrasborradas
                             20 .globl cooldownEnemigo1
                             21 .globl cooldownEnemigo2
                             22 .globl cooldownMisil
                             23 .globl letrasborradas
                             24 .globl nivelactual
                             25 .globl cargaNivel
                             26 .globl vidas
                             27 
                             28 
                             29 
                     4003    30 playerPos = #0x4003
                     400A    31 espadaPos = #0x400A
                     4011    32 wallIPos = #0x4011
                     4018    33 wallDPos = #0x4018
                     401F    34 enemyPos = #0x401F
                     4026    35 crocodile = #0x4026
                     402D    36 enemyIzqPos = #0x402D
                     4034    37 enemyIzqPos2 = #0x4034
                     403B    38 enemyUp1Pos = #0x403B
                     4042    39 enemyUp2Pos = #0x4042
                     4049    40 enemyUp3Pos = #0x4049
                     4050    41 enemyDerPos2 = #0x4050
                     4057    42 enemyUp4Pos = #0x4057
                     405E    43 enemyIzqPos3 = #0x405E
                     4065    44 enemyUp5Pos = #0x4065
                             45 ;;crocodile = #0x4178
                     406C    46 enemyDerPos3 = #0x406C
                             47 ;;croco = #0x417F
                             48 
                             49 
                             50 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 5.
Hexadecimal [16-Bits]



                             18 .include "system/render_system.h.s"
                              1 ;;This file is part of Kubso.
                              2 ;;
                              3 ;;Kubso is free software: you can redistribute it and/or modify
                              4 ;;it under the terms of the GNU General Public License as published by
                              5 ;;the Free Software Foundation, either version 3 of the License, or
                              6 ;;(at your option) any later version.
                              7 ;;
                              8 ;;Kubso is distributed in the hope that it will be useful,
                              9 ;;but WITHOUT ANY WARRANTY; without even the implied warranty of
                             10 ;;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                             11 ;;GNU General Public License for more details.
                             12 ;;
                             13 ;;You should have received a copy of the GNU General Public License
                             14 ;;along with Kubso.  If not, see <https://www.gnu.org/licenses/>.
                             15 .globl rendersys_update
                             16 .globl rendersys_init
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 6.
Hexadecimal [16-Bits]



                             19 .include "system/renderPersonaje.h.s"
                              1 ;;This file is part of Kubso.
                              2 ;;
                              3 ;;Kubso is free software: you can redistribute it and/or modify
                              4 ;;it under the terms of the GNU General Public License as published by
                              5 ;;the Free Software Foundation, either version 3 of the License, or
                              6 ;;(at your option) any later version.
                              7 ;;
                              8 ;;Kubso is distributed in the hope that it will be useful,
                              9 ;;but WITHOUT ANY WARRANTY; without even the implied warranty of
                             10 ;;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                             11 ;;GNU General Public License for more details.
                             12 ;;
                             13 ;;You should have received a copy of the GNU General Public License
                             14 ;;along with Kubso.  If not, see <https://www.gnu.org/licenses/>.
                             15 .globl pintarPersonajePos0
                             16 .globl borraPersonajePos0
                             17 .globl pintarPersonajePos1
                             18 .globl ataqueAereoDerecha
                             19 .globl ataqueAereoDerecha2
                             20 .globl ataqueAereoIzquierda
                             21 .globl ataqueAereoIzquierda2
                             22 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 7.
Hexadecimal [16-Bits]



                             20 .include "system/renderEnemigo5A.h.s"
                              1 ;;This file is part of Kubso.
                              2 ;;
                              3 ;;Kubso is free software: you can redistribute it and/or modify
                              4 ;;it under the terms of the GNU General Public License as published by
                              5 ;;the Free Software Foundation, either version 3 of the License, or
                              6 ;;(at your option) any later version.
                              7 ;;
                              8 ;;Kubso is distributed in the hope that it will be useful,
                              9 ;;but WITHOUT ANY WARRANTY; without even the implied warranty of
                             10 ;;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                             11 ;;GNU General Public License for more details.
                             12 ;;
                             13 ;;You should have received a copy of the GNU General Public License
                             14 ;;along with Kubso.  If not, see <https://www.gnu.org/licenses/>.
                             15 .globl pintarEnemigo5
                             16 .globl borrarEnemigo5
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 8.
Hexadecimal [16-Bits]



                             21 
                             22 
   0000                      23 ataqueAereo::
   0000 DD 21 03 40   [14]   24     ld ix, #playerPos
   0004 DD 4E 00      [19]   25     ld c, entity_x(ix)
   0007 DD 46 01      [19]   26     ld b, entity_y(ix)
   000A 05            [ 4]   27     dec b
   000B 05            [ 4]   28     dec b
   000C 05            [ 4]   29     dec b
   000D 05            [ 4]   30     dec b
   000E 05            [ 4]   31     dec b
   000F 05            [ 4]   32     dec b
   0010 05            [ 4]   33     dec b
   0011 05            [ 4]   34     dec b
   0012 05            [ 4]   35     dec b
   0013 C5            [11]   36     push bc
                             37 
                             38     ;;ld      de, #0xC000        
                             39     ;;call cpct_getScreenPtr_asm  ;;Función que calcula la dirección de memoria de video con esos parámetros
                             40 ;;
                             41     ;;ex      de, hl             ;;Intercambia los 2 valores (supongo que la fucion de dibujo lo usará)
                             42     ;;ld      a,  #0xAF         ;;Color (en la posición de la entidad)
                             43     ;;ld      c,  #1         ;;Ancho (en la posición de la entidad)
                             44     ;;ld      b,  #6        ;;Alto (en la posición de la entidad)
                             45     ;;call cpct_drawSolidBox_asm
                             46 
   0014 DD 21 03 40   [14]   47     ld ix, #playerPos
   0018 DD 7E 04      [19]   48     ld a, entity_estado(ix)
   001B 3D            [ 4]   49     dec a 
   001C 28 02         [12]   50     jr z, ataqueAereoIzq
   001E 18 3D         [12]   51     jr ataqueAereoDer
                             52 
                             53 
   0020                      54     ataqueAereoIzq:
   0020 CD 00 00      [17]   55     call ataqueAereoIzquierda
                             56 
   0023 3E 0A         [ 7]   57     ld a, #10
   0025                      58     bucleizq:
   0025 76            [ 4]   59     halt
   0026 3D            [ 4]   60     dec a
   0027 20 FC         [12]   61     jr nz, bucleizq
                             62 
   0029 CD 00 00      [17]   63     call ataqueAereoIzquierda2
                             64 
   002C 3E 0A         [ 7]   65     ld a, #10
   002E                      66     bucleizq2:
   002E 76            [ 4]   67     halt
   002F 3D            [ 4]   68     dec a
   0030 20 FC         [12]   69     jr nz, bucleizq2
                             70 
   0032 3E 0A         [ 7]   71     ld a, #10
   0034                      72     bucleizq3:
   0034 76            [ 4]   73     halt
   0035 3D            [ 4]   74     dec a
   0036 20 FC         [12]   75     jr nz, bucleizq3
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 9.
Hexadecimal [16-Bits]



                             76 
   0038 CD 00 00      [17]   77     call ataqueAereoIzquierda
                             78 
   003B 3E 0A         [ 7]   79     ld a, #10
   003D                      80     bucleizq4:
   003D 76            [ 4]   81     halt
   003E 3D            [ 4]   82     dec a
   003F 20 FC         [12]   83     jr nz, bucleizq4
                             84 
   0041 CD 00 00      [17]   85     call ataqueAereoIzquierda2
                             86 
                             87     ;;borrar
   0044 C1            [10]   88     pop bc
                             89 
   0045 11 00 C0      [10]   90     ld      de, #0xC000  
   0048 05            [ 4]   91     dec b     
   0049 05            [ 4]   92     dec b
   004A 05            [ 4]   93     dec b 
   004B CD 00 00      [17]   94     call cpct_getScreenPtr_asm 
                             95 
   004E EB            [ 4]   96     ex      de, hl             ;;Intercambia los 2 valores (supongo que la fucion de dibujo lo usará)
   004F 3E 00         [ 7]   97     ld      a,  #0x00         ;;Color (en la posición de la entidad)
   0051 0E 02         [ 7]   98     ld      c,  #2        ;;Ancho (en la posición de la entidad)
   0053 06 08         [ 7]   99     ld      b,  #8        ;;Alto (en la posición de la entidad)
   0055 CD 00 00      [17]  100     call cpct_drawSolidBox_asm
                            101 
   0058 CD 00 00      [17]  102     call pintarPersonajePos1
                            103 
   005B 18 3B         [12]  104     jr continua
                            105 
   005D                     106     ataqueAereoDer:
   005D CD 00 00      [17]  107     call ataqueAereoDerecha
                            108 
   0060 3E 0A         [ 7]  109     ld a, #10
   0062                     110     bucleder:
   0062 76            [ 4]  111     halt
   0063 3D            [ 4]  112     dec a
   0064 20 FC         [12]  113     jr nz, bucleder
                            114 
   0066 CD 00 00      [17]  115     call ataqueAereoDerecha2
                            116 
   0069 3E 0A         [ 7]  117     ld a, #10
   006B                     118     bucleder2:
   006B 76            [ 4]  119     halt
   006C 3D            [ 4]  120     dec a
   006D 20 FC         [12]  121     jr nz, bucleder2
                            122 
   006F CD 00 00      [17]  123     call ataqueAereoDerecha
                            124 
   0072 3E 0A         [ 7]  125     ld a, #10
   0074                     126     bucleder3:
   0074 76            [ 4]  127     halt
   0075 3D            [ 4]  128     dec a
   0076 20 FC         [12]  129     jr nz, bucleder3
                            130 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 10.
Hexadecimal [16-Bits]



   0078 CD 00 00      [17]  131     call ataqueAereoDerecha2
                            132 
   007B 3E 0A         [ 7]  133     ld a, #10
   007D                     134     bucleder4:
   007D 76            [ 4]  135     halt
   007E 3D            [ 4]  136     dec a
   007F 20 FC         [12]  137     jr nz, bucleder4
                            138 
                            139     ;;borrar
   0081 C1            [10]  140     pop bc
                            141 
   0082 11 00 C0      [10]  142     ld      de, #0xC000  
   0085 05            [ 4]  143     dec b      
   0086 05            [ 4]  144     dec b
   0087 05            [ 4]  145     dec b
   0088 CD 00 00      [17]  146     call cpct_getScreenPtr_asm 
                            147 
   008B EB            [ 4]  148     ex      de, hl             ;;Intercambia los 2 valores (supongo que la fucion de dibujo lo usará)
   008C 3E 00         [ 7]  149     ld      a,  #0x00         ;;Color (en la posición de la entidad)
   008E 0E 02         [ 7]  150     ld      c,  #2        ;;Ancho (en la posición de la entidad)
   0090 06 08         [ 7]  151     ld      b,  #8        ;;Alto (en la posición de la entidad)
   0092 CD 00 00      [17]  152     call cpct_drawSolidBox_asm
                            153 
   0095 CD 00 00      [17]  154     call pintarPersonajePos0
                            155 
                            156 
                            157 
   0098                     158     continua:
                            159     
                            160 
                            161 
   0098                     162     deteccionEnemigo:
   0098 DD 21 03 40   [14]  163     ld ix, #playerPos
   009C DD 7E 00      [19]  164     ld a, entity_x(ix)
   009F DD 21 3B 40   [14]  165     ld ix, #enemyUp1Pos
   00A3 DD 46 00      [19]  166     ld b, entity_x(ix)
                            167 
   00A6                     168     compruebaX1:
   00A6 3D            [ 4]  169     dec a
   00A7 28 05         [12]  170     jr z, playerXCero1
   00A9 05            [ 4]  171     dec b
   00AA 28 0B         [12]  172     jr z, enemyUp1Cero
   00AC 18 F8         [12]  173     jr compruebaX1
   00AE                     174     playerXCero1:
   00AE 05            [ 4]  175     dec b
   00AF 28 0C         [12]  176     jr z, mismaX1
   00B1 05            [ 4]  177     dec b
   00B2 28 09         [12]  178     jr z, mismaX1
   00B4 C3 5C 01      [10]  179     jp deteccionEnemigo2
   00B7                     180     enemyUp1Cero:
   00B7 3D            [ 4]  181     dec a
   00B8 28 03         [12]  182     jr z, mismaX1
   00BA C3 5C 01      [10]  183     jp deteccionEnemigo2
                            184 
   00BD                     185     mismaX1:
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 11.
Hexadecimal [16-Bits]



   00BD DD 21 03 40   [14]  186     ld ix, #playerPos
   00C1 DD 7E 01      [19]  187     ld a, entity_y(ix)
   00C4 DD 21 3B 40   [14]  188     ld ix, #enemyUp1Pos
   00C8 DD 46 01      [19]  189     ld b, entity_y(ix)
                            190 
   00CB                     191     compruebaY1:
   00CB 05            [ 4]  192     dec b
   00CC 28 06         [12]  193     jr z, enemyUp1YCero
   00CE 3D            [ 4]  194     dec a
   00CF CA 5C 01      [10]  195     jp z, deteccionEnemigo2
   00D2 18 F7         [12]  196     jr compruebaY1
   00D4                     197     enemyUp1YCero:
   00D4 3D            [ 4]  198     dec a
   00D5 28 41         [12]  199     jr z, mataUp1
   00D7 3D            [ 4]  200     dec a
   00D8 28 3E         [12]  201     jr z, mataUp1
   00DA 3D            [ 4]  202     dec a
   00DB 28 3B         [12]  203     jr z, mataUp1
   00DD 3D            [ 4]  204     dec a
   00DE 28 38         [12]  205     jr z, mataUp1
   00E0 3D            [ 4]  206     dec a
   00E1 28 35         [12]  207     jr z, mataUp1
   00E3 3D            [ 4]  208     dec a
   00E4 28 32         [12]  209     jr z, mataUp1
   00E6 3D            [ 4]  210     dec a
   00E7 28 2F         [12]  211     jr z, mataUp1
   00E9 3D            [ 4]  212     dec a
   00EA 28 2C         [12]  213     jr z, mataUp1
   00EC 3D            [ 4]  214     dec a
   00ED 28 29         [12]  215     jr z, mataUp1
   00EF 3D            [ 4]  216     dec a
   00F0 28 26         [12]  217     jr z, mataUp1
   00F2 3D            [ 4]  218     dec a
   00F3 28 23         [12]  219     jr z, mataUp1
   00F5 3D            [ 4]  220     dec a
   00F6 28 20         [12]  221     jr z, mataUp1
   00F8 3D            [ 4]  222     dec a
   00F9 28 1D         [12]  223     jr z, mataUp1
   00FB 3D            [ 4]  224     dec a
   00FC 28 1A         [12]  225     jr z, mataUp1
   00FE 3D            [ 4]  226     dec a
   00FF 28 17         [12]  227     jr z, mataUp1
   0101 3D            [ 4]  228     dec a
   0102 28 14         [12]  229     jr z, mataUp1
   0104 3D            [ 4]  230     dec a
   0105 28 11         [12]  231     jr z, mataUp1
   0107 3D            [ 4]  232     dec a
   0108 28 0E         [12]  233     jr z, mataUp1
   010A 3D            [ 4]  234     dec a
   010B 28 0B         [12]  235     jr z, mataUp1
   010D 3D            [ 4]  236     dec a
   010E 28 08         [12]  237     jr z, mataUp1
   0110 3D            [ 4]  238     dec a
   0111 28 05         [12]  239     jr z, mataUp1
   0113 3D            [ 4]  240     dec a
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 12.
Hexadecimal [16-Bits]



   0114 28 02         [12]  241     jr z, mataUp1
   0116 18 44         [12]  242     jr deteccionEnemigo2
                            243 
   0118                     244     mataUp1:
   0118 DD 21 3B 40   [14]  245     ld  ix, #enemyUp1Pos
   011C DD 36 06 F0   [19]  246     ld entity_color(ix), #0xF0
   0120 CD 00 00      [17]  247     call pintarEnemigo5
                            248     ;;call  entityman_getEntityArray_IX
                            249     ;;call  entityman_getNumEntities_A
                            250     ;;call  rendersys_update
                            251 
   0123 3E 32         [ 7]  252     ld a, #50
   0125                     253     muere1bucle:
   0125 76            [ 4]  254     halt
   0126 3D            [ 4]  255     dec a 
   0127 20 FC         [12]  256     jr nz, muere1bucle
                            257 
                            258 
   0129 DD 21 3B 40   [14]  259     ld  ix, #enemyUp1Pos
   012D DD 36 06 00   [19]  260     ld entity_color(ix), #0x00
   0131 CD 00 00      [17]  261     call borrarEnemigo5
                            262     ;;call  entityman_getEntityArray_IX
                            263     ;;call  entityman_getNumEntities_A
                            264     ;;call  rendersys_update
                            265 
   0134 DD 21 11 40   [14]  266     ld ix, #wallIPos
   0138 DD 7E 05      [19]  267     ld a, entity_vy(ix)
   013B 3C            [ 4]  268     inc a 
   013C DD 77 05      [19]  269     ld entity_vy(ix), a
                            270 
   013F DD 21 03 40   [14]  271     ld ix, #playerPos
   0143 DD 46 00      [19]  272     ld b, entity_x(ix)
                            273     
   0146 DD 21 3B 40   [14]  274     ld  ix, #enemyUp1Pos
   014A DD 36 04 00   [19]  275     ld entity_estado(ix), #0
   014E DD 36 06 F0   [19]  276     ld entity_color(ix), #0xF0
   0152 DD 36 01 40   [19]  277     ld entity_y(ix), #0x40
   0156 DD 70 00      [19]  278     ld entity_x(ix), b
   0159 CD 00 00      [17]  279     call pintarEnemigo5
                            280     ;;call  entityman_getEntityArray_IX
                            281     ;;call  entityman_getNumEntities_A
                            282     ;;call  rendersys_update
                            283 
                            284 
                            285     ;;----------------------------------------------
   015C                     286     deteccionEnemigo2:
   015C DD 21 03 40   [14]  287     ld ix, #playerPos
   0160 DD 7E 00      [19]  288     ld a, entity_x(ix)
   0163 DD 21 42 40   [14]  289     ld ix, #enemyUp2Pos
   0167 DD 46 00      [19]  290     ld b, entity_x(ix)
                            291 
   016A                     292     compruebaX2:
   016A 3D            [ 4]  293     dec a
   016B 28 05         [12]  294     jr z, playerXCero2
   016D 05            [ 4]  295     dec b
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 13.
Hexadecimal [16-Bits]



   016E 28 0B         [12]  296     jr z, enemyUp2Cero
   0170 18 F8         [12]  297     jr compruebaX2
   0172                     298     playerXCero2:
   0172 05            [ 4]  299     dec b
   0173 28 0C         [12]  300     jr z, mismaX2
   0175 05            [ 4]  301     dec b
   0176 28 09         [12]  302     jr z, mismaX2
   0178 C3 23 02      [10]  303     jp deteccionEnemigo3
   017B                     304     enemyUp2Cero:
   017B 3D            [ 4]  305     dec a
   017C 28 03         [12]  306     jr z, mismaX2
   017E C3 23 02      [10]  307     jp deteccionEnemigo3
                            308 
   0181                     309     mismaX2:
   0181 DD 21 03 40   [14]  310     ld ix, #playerPos
   0185 DD 7E 01      [19]  311     ld a, entity_y(ix)
   0188 DD 21 42 40   [14]  312     ld ix, #enemyUp2Pos
   018C DD 46 01      [19]  313     ld b, entity_y(ix)
                            314 
   018F                     315     compruebaY2:
   018F 05            [ 4]  316     dec b
   0190 28 06         [12]  317     jr z, enemyUp2YCero
   0192 3D            [ 4]  318     dec a
   0193 CA 23 02      [10]  319     jp z, deteccionEnemigo3
   0196 18 F7         [12]  320     jr compruebaY2
   0198                     321     enemyUp2YCero:
   0198 3D            [ 4]  322     dec a
   0199 28 41         [12]  323     jr z, mataUp2
   019B 3D            [ 4]  324     dec a
   019C 28 3E         [12]  325     jr z, mataUp2
   019E 3D            [ 4]  326     dec a
   019F 28 3B         [12]  327     jr z, mataUp2
   01A1 3D            [ 4]  328     dec a
   01A2 28 38         [12]  329     jr z, mataUp2
   01A4 3D            [ 4]  330     dec a
   01A5 28 35         [12]  331     jr z, mataUp2
   01A7 3D            [ 4]  332     dec a
   01A8 28 32         [12]  333     jr z, mataUp2
   01AA 3D            [ 4]  334     dec a
   01AB 28 2F         [12]  335     jr z, mataUp2
   01AD 3D            [ 4]  336     dec a
   01AE 28 2C         [12]  337     jr z, mataUp2
   01B0 3D            [ 4]  338     dec a
   01B1 28 29         [12]  339     jr z, mataUp2
   01B3 3D            [ 4]  340     dec a
   01B4 28 26         [12]  341     jr z, mataUp2
   01B6 3D            [ 4]  342     dec a
   01B7 28 23         [12]  343     jr z, mataUp2
   01B9 3D            [ 4]  344     dec a
   01BA 28 20         [12]  345     jr z, mataUp2
   01BC 3D            [ 4]  346     dec a
   01BD 28 1D         [12]  347     jr z, mataUp2
   01BF 3D            [ 4]  348     dec a
   01C0 28 1A         [12]  349     jr z, mataUp2
   01C2 3D            [ 4]  350     dec a
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 14.
Hexadecimal [16-Bits]



   01C3 28 17         [12]  351     jr z, mataUp2
   01C5 3D            [ 4]  352     dec a
   01C6 28 14         [12]  353     jr z, mataUp2
   01C8 3D            [ 4]  354     dec a
   01C9 28 11         [12]  355     jr z, mataUp2
   01CB 3D            [ 4]  356     dec a
   01CC 28 0E         [12]  357     jr z, mataUp2
   01CE 3D            [ 4]  358     dec a
   01CF 28 0B         [12]  359     jr z, mataUp2
   01D1 3D            [ 4]  360     dec a
   01D2 28 08         [12]  361     jr z, mataUp2
   01D4 3D            [ 4]  362     dec a
   01D5 28 05         [12]  363     jr z, mataUp2
   01D7 3D            [ 4]  364     dec a
   01D8 28 02         [12]  365     jr z, mataUp2
   01DA 18 47         [12]  366     jr deteccionEnemigo3
                            367 
   01DC                     368     mataUp2:
   01DC DD 21 42 40   [14]  369     ld  ix, #enemyUp2Pos
   01E0 DD 36 06 F0   [19]  370     ld entity_color(ix), #0xF0
   01E4 CD 00 00      [17]  371     call pintarEnemigo5
                            372     ;call  entityman_getEntityArray_IX
                            373     ;call  entityman_getNumEntities_A
                            374     ;call  rendersys_update
                            375 
   01E7 3E 32         [ 7]  376     ld a, #50
   01E9                     377     muere2bucle:
   01E9 76            [ 4]  378     halt
   01EA 3D            [ 4]  379     dec a 
   01EB 20 FC         [12]  380     jr nz, muere2bucle
                            381 
                            382 
   01ED DD 21 42 40   [14]  383     ld  ix, #enemyUp2Pos
   01F1 DD 36 06 00   [19]  384     ld entity_color(ix), #0x00
   01F5 CD 00 00      [17]  385     call borrarEnemigo5
                            386     ;;call  entityman_getEntityArray_IX
                            387     ;;call  entityman_getNumEntities_A
                            388     ;;call  rendersys_update
                            389 
   01F8 DD 21 11 40   [14]  390     ld ix, #wallIPos
   01FC DD 7E 05      [19]  391     ld a, entity_vy(ix)
   01FF 3C            [ 4]  392     inc a 
   0200 DD 77 05      [19]  393     ld entity_vy(ix), a
                            394 
   0203 DD 21 03 40   [14]  395     ld ix, #playerPos
   0207 DD 46 00      [19]  396     ld b, entity_x(ix)
                            397     
   020A DD 21 42 40   [14]  398     ld  ix, #enemyUp2Pos
   020E DD 36 04 00   [19]  399     ld entity_estado(ix), #0
   0212 DD 36 06 F0   [19]  400     ld entity_color(ix), #0xF0
   0216 DD 36 01 40   [19]  401     ld entity_y(ix), #0x40
   021A 04            [ 4]  402     inc b 
   021B 04            [ 4]  403     inc b 
   021C 04            [ 4]  404     inc b
   021D DD 70 00      [19]  405     ld entity_x(ix), b
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 15.
Hexadecimal [16-Bits]



   0220 CD 00 00      [17]  406     call pintarEnemigo5
                            407     ;;call  entityman_getEntityArray_IX
                            408     ;;call  entityman_getNumEntities_A
                            409     ;;call  rendersys_update
                            410 
                            411     ;;------------------------
   0223                     412     deteccionEnemigo3:
   0223 DD 21 03 40   [14]  413     ld ix, #playerPos
   0227 DD 7E 00      [19]  414     ld a, entity_x(ix)
   022A DD 21 49 40   [14]  415     ld ix, #enemyUp3Pos
   022E DD 46 00      [19]  416     ld b, entity_x(ix)
                            417 
   0231                     418     compruebaX3:
   0231 3D            [ 4]  419     dec a
   0232 28 05         [12]  420     jr z, playerXCero3
   0234 05            [ 4]  421     dec b
   0235 28 0B         [12]  422     jr z, enemyUp3Cero
   0237 18 F8         [12]  423     jr compruebaX3
   0239                     424     playerXCero3:
   0239 05            [ 4]  425     dec b
   023A 28 0C         [12]  426     jr z, mismaX3
   023C 05            [ 4]  427     dec b
   023D 28 09         [12]  428     jr z, mismaX3
   023F C3 EA 02      [10]  429     jp nomata
   0242                     430     enemyUp3Cero:
   0242 3D            [ 4]  431     dec a
   0243 28 03         [12]  432     jr z, mismaX3
   0245 C3 EA 02      [10]  433     jp nomata
                            434 
   0248                     435     mismaX3:
   0248 DD 21 03 40   [14]  436     ld ix, #playerPos
   024C DD 7E 01      [19]  437     ld a, entity_y(ix)
   024F DD 21 49 40   [14]  438     ld ix, #enemyUp3Pos
   0253 DD 46 01      [19]  439     ld b, entity_y(ix)
                            440 
   0256                     441     compruebaY3:
   0256 05            [ 4]  442     dec b
   0257 28 06         [12]  443     jr z, enemyUp3YCero
   0259 3D            [ 4]  444     dec a
   025A CA EA 02      [10]  445     jp z, nomata
   025D 18 F7         [12]  446     jr compruebaY3
   025F                     447     enemyUp3YCero:
   025F 3D            [ 4]  448     dec a
   0260 28 41         [12]  449     jr z, mataUp3
   0262 3D            [ 4]  450     dec a
   0263 28 3E         [12]  451     jr z, mataUp3
   0265 3D            [ 4]  452     dec a
   0266 28 3B         [12]  453     jr z, mataUp3
   0268 3D            [ 4]  454     dec a
   0269 28 38         [12]  455     jr z, mataUp3
   026B 3D            [ 4]  456     dec a
   026C 28 35         [12]  457     jr z, mataUp3
   026E 3D            [ 4]  458     dec a
   026F 28 32         [12]  459     jr z, mataUp3
   0271 3D            [ 4]  460     dec a
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 16.
Hexadecimal [16-Bits]



   0272 28 2F         [12]  461     jr z, mataUp3
   0274 3D            [ 4]  462     dec a
   0275 28 2C         [12]  463     jr z, mataUp3
   0277 3D            [ 4]  464     dec a
   0278 28 29         [12]  465     jr z, mataUp3
   027A 3D            [ 4]  466     dec a
   027B 28 26         [12]  467     jr z, mataUp3
   027D 3D            [ 4]  468     dec a
   027E 28 23         [12]  469     jr z, mataUp3
   0280 3D            [ 4]  470     dec a
   0281 28 20         [12]  471     jr z, mataUp3
   0283 3D            [ 4]  472     dec a
   0284 28 1D         [12]  473     jr z, mataUp3
   0286 3D            [ 4]  474     dec a
   0287 28 1A         [12]  475     jr z, mataUp3
   0289 3D            [ 4]  476     dec a
   028A 28 17         [12]  477     jr z, mataUp3
   028C 3D            [ 4]  478     dec a
   028D 28 14         [12]  479     jr z, mataUp3
   028F 3D            [ 4]  480     dec a
   0290 28 11         [12]  481     jr z, mataUp3
   0292 3D            [ 4]  482     dec a
   0293 28 0E         [12]  483     jr z, mataUp3
   0295 3D            [ 4]  484     dec a
   0296 28 0B         [12]  485     jr z, mataUp3
   0298 3D            [ 4]  486     dec a
   0299 28 08         [12]  487     jr z, mataUp3
   029B 3D            [ 4]  488     dec a
   029C 28 05         [12]  489     jr z, mataUp3
   029E 3D            [ 4]  490     dec a
   029F 28 02         [12]  491     jr z, mataUp3
   02A1 18 47         [12]  492     jr nomata
                            493 
   02A3                     494     mataUp3:
   02A3 DD 21 49 40   [14]  495     ld  ix, #enemyUp3Pos
   02A7 DD 36 06 F0   [19]  496     ld entity_color(ix), #0xF0
   02AB CD 00 00      [17]  497     call pintarEnemigo5
                            498     ;;call  entityman_getEntityArray_IX
                            499     ;;call  entityman_getNumEntities_A
                            500     ;;call  rendersys_update
                            501 
   02AE 3E 32         [ 7]  502     ld a, #50
   02B0                     503     muere3bucle:
   02B0 76            [ 4]  504     halt
   02B1 3D            [ 4]  505     dec a 
   02B2 20 FC         [12]  506     jr nz, muere3bucle
                            507 
                            508 
   02B4 DD 21 49 40   [14]  509     ld  ix, #enemyUp3Pos
   02B8 DD 36 06 00   [19]  510     ld entity_color(ix), #0x00
   02BC CD 00 00      [17]  511     call borrarEnemigo5
                            512     ;;call  entityman_getEntityArray_IX
                            513     ;;call  entityman_getNumEntities_A
                            514     ;;call  rendersys_update
                            515 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 17.
Hexadecimal [16-Bits]



   02BF DD 21 11 40   [14]  516     ld ix, #wallIPos
   02C3 DD 7E 05      [19]  517     ld a, entity_vy(ix)
   02C6 3C            [ 4]  518     inc a 
   02C7 DD 77 05      [19]  519     ld entity_vy(ix), a
                            520 
   02CA DD 21 03 40   [14]  521     ld ix, #playerPos
   02CE DD 46 00      [19]  522     ld b, entity_x(ix)
                            523     
   02D1 DD 21 49 40   [14]  524     ld  ix, #enemyUp3Pos
   02D5 DD 36 04 00   [19]  525     ld entity_estado(ix), #0
   02D9 DD 36 06 F0   [19]  526     ld entity_color(ix), #0xF0
   02DD DD 36 01 40   [19]  527     ld entity_y(ix), #0x40
   02E1 04            [ 4]  528     inc b 
   02E2 04            [ 4]  529     inc b 
   02E3 04            [ 4]  530     inc b
   02E4 DD 70 00      [19]  531     ld entity_x(ix), b
   02E7 CD 00 00      [17]  532     call pintarEnemigo5
                            533     ;;call  entityman_getEntityArray_IX
                            534     ;;call  entityman_getNumEntities_A
                            535     ;;call  rendersys_update
                            536 
   02EA                     537     nomata:
   02EA C9            [10]  538     ret
